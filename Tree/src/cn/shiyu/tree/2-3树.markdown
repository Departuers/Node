###2-3树
满足二分搜索树的基本性质
但不是二叉树
```
每一个节点可以存储2个值，或者1个值
存储2个值，可以有3个孩子，    叫做3节点
当节点存储两个值,它们的3个孩子:它的左孩子是小于节点左边的值,
它们的中间孩子的值,是在节点两个值之间的,它的右孩子比节点右边的值大
存储1个值，可以有2个孩子     叫做2节点

非常重要的性质!!!:2-3树是一颗绝地平衡的树,插入元素的时候,构建的方法是有关的
绝对平衡:从根节点到任意叶子节点，所经过节点数量一定相同

二分搜索树可能退化成一个链表
堆是完全二叉树可能最后一层叶子没有填满
线段树同理

2-3树维持平衡方法
2-3树添加节点永远不会添加到一个空的位置,会先按照二分搜索树,放在节点的两侧
如果两侧没有节点,就添加到找到的最后一个叶子节点
当最后一个叶子节点已经是一个三节点,就向下分解,或者父节点向上融合
如果它的父节点也是一个三节点,先放上去,再把中间的元素向上分解
先临时成为一个四节点,再分解或融合
一般先分解再融合