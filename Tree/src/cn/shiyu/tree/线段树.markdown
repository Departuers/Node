###线段树
````
经典的线段树问题：区间染色
有一面墙，长度为n，每次选择一块进行染色
m次操作后，我们可以看见多少种颜色
m次操作后，我们可以在【i，j】区间看见多少种颜色

实质：基于区间的统计查询
比如：2017年注册的用户消费最高的用户，
如果仅仅是2017年那一年的统计，直接查出来算就行了，
但数据在不断更新，就要用线段树

空间换时间
               使用数组实现   使用线段树     
染色操作（更新区间）  O(N)      O(logn)
查询操作（查询区间）  O(N)      O(logn)

线段树其叶子节点可能不在同一层，

线段树和堆是一颗平衡二叉树，
把线段树看成一个满二叉树，不存在的节点看做null
用数组存储
如果区间有n个元素那么数组需要有多少节点？
1层   1
2层   2
3层   4
4层   8
h-1层  2^(h-1)
对于满二叉树，如果有h层(从1层开始算，而非0层)一共就有2^h-1个节点
最后一层节点数大致等于前面所有层节点之和

满二叉树最好情况：如果n是2的整数次幂只需要2n的空间
所有节点一一对应，就是需要2n个空间

最坏情况n=2^k+1，要加一层，用满二叉树的方式存储，就需要4n的空间

如果使用数组区间有n个元素，只要4n空间就可以全部存储了，但有很多空间富余
空间换时间，链式存储线段树可以避免浪费。




